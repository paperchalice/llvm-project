//===-- MMIXInstructionSelector.h -----------------------------*- C++ -*-==//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
/// \file
/// This file declares the targeting of the InstructionSelector class for
/// MMIX.
/// \todo This should be generated by TableGen.
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MMIX_GLOBALISEL_MMIXINSTRUCTIONSELECTOR_H
#define LLVM_LIB_TARGET_MMIX_GLOBALISEL_MMIXINSTRUCTIONSELECTOR_H

#include "llvm/CodeGen/GlobalISel/InstructionSelector.h"
#include "llvm/Support/Debug.h"

namespace llvm {

class MMIXSubtarget;
class MMIXInstrInfo;
class MMIXRegisterInfo;
class MMIXRegisterBankInfo;

#define GET_GLOBALISEL_PREDICATE_BITSET
#include "MMIXGenGlobalISel.inc"
#undef GET_GLOBALISEL_PREDICATE_BITSET

class MMIXInstructionSelector : public InstructionSelector {
public:
  MMIXInstructionSelector(const MMIXTargetMachine &TM,
                           const MMIXSubtarget &STI,
                           const MMIXRegisterBankInfo &RBI);
  static const char *getName();
  bool select(MachineInstr &I) override;
private:
  bool selectImpl(MachineInstr &I, CodeGenCoverage &CoverageInfo) const;

  const MMIXSubtarget &STI;
  const MMIXInstrInfo &TII;
  const MMIXRegisterInfo &TRI;
  const MMIXRegisterBankInfo &RBI;

#define GET_GLOBALISEL_PREDICATES_DECL
#include "MMIXGenGlobalISel.inc"
#undef GET_GLOBALISEL_PREDICATES_DECL

#define GET_GLOBALISEL_TEMPORARIES_DECL
#include "MMIXGenGlobalISel.inc"
#undef GET_GLOBALISEL_TEMPORARIES_DECL
};

} // namespace llvm

#endif // LLVM_LIB_TARGET_MMIX_GLOBALISEL_MMIXINSTRUCTIONSELECTOR_H
