//===-- MMIXSubtarget.h - Define Subtarget for the MMIX -------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the MMIX specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MMIX_MMIXSUBTARGET_H
#define LLVM_LIB_TARGET_MMIX_MMIXSUBTARGET_H

#include "MMIXFrameLowering.h"
#include "MMIXInstrInfo.h"
#include "MMIXRegisterInfo.h"
#include "MMIXTargetLowering.h"
#include "MMIXFrameLowering.h"

#include "llvm/CodeGen/GlobalISel/CallLowering.h"
#include "llvm/CodeGen/GlobalISel/InstructionSelector.h"
#include "llvm/CodeGen/GlobalISel/LegalizerInfo.h"
#include "llvm/CodeGen/RegisterBankInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/MC/MCSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#define GET_SUBTARGETINFO_ENUM
#include "MMIXGenSubtargetInfo.inc"

namespace llvm {

class MMIXTargetMachine;
class MMIXInstrInfo;
class MMIXTargetLowering;
class MMIXCallLowering;
class MMIXLegalizerInfo;
class MMIXRegisterBankInfo;
class MMIXInstructionSelector;

class MMIXSubtarget : public MMIXGenSubtargetInfo {
public:
  MMIXSubtarget(const Triple &TT, StringRef CPU, StringRef TuneCPU,
                 StringRef FS, StringRef ABIName, const MMIXTargetMachine &TM);
  const MMIXInstrInfo *getInstrInfo() const override;
  const MMIXRegisterInfo *getRegisterInfo() const override;
  const MMIXFrameLowering *getFrameLowering() const override;
public:
  // Parses features string setting specified subtarget options. The
  // definition of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
  
  // GlobalIsel API
  const CallLowering *getCallLowering() const override;
  InstructionSelector *getInstructionSelector() const override;
  const LegalizerInfo *getLegalizerInfo() const override;
  const RegisterBankInfo *getRegBankInfo() const override;
  const TargetLowering *getTargetLowering() const override;

private:
  MMIXTargetLowering TLInfo;
  MMIXFrameLowering FrameLowering;
  MMIXInstrInfo InstrInfo;
  MMIXRegisterInfo RegInfo;

protected:
  // GlobalISel related APIs.
  std::unique_ptr<MMIXCallLowering> CallLoweringInfo;
  std::unique_ptr<MMIXLegalizerInfo> Legalizer;
  std::unique_ptr<MMIXRegisterBankInfo> RegBankInfo;
  std::unique_ptr<InstructionSelector> InstSelector;
};

} // end namespace llvm

#endif // LLVM_LIB_TARGET_MMIX_MMIXSUBTARGET_H
